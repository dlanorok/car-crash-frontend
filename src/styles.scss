/* You can add global styles to this file, and also import other style files */

@import url('https://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400,400italic,600,600italic,700,700italic,800,800italic');
html, body {
  height: 100%;
  color: var(--theme-color-type);
  font-family: Open Sans, sans-serif;
  font-size: 1rem;
}

body {
  margin: 0;
}

app-root {
  display: block;
  height: 100%;
}

.d-block {
  display: block !important;
}
@import "styles/variables";

@import "node_modules/bootstrap/scss/bootstrap";
@import 'node_modules/bootstrap/scss/functions';
@import 'node_modules/bootstrap/scss/variables';
@import 'node_modules/bootstrap/scss/mixins';
@import 'node_modules/bootstrap/scss/modal';
@import "~bootstrap-icons/font/bootstrap-icons.css";
//@import 'node_modules/ngx-toastr/toastr';
@import "styles/base-css-overwrite";
@import "styles/helpers.scss";

.form-control::placeholder {
  opacity: 0.4; /* set the opacity value as desired */
}

.filled-icon {
  font-size: 18px;
  padding: 4px 8px;
  border-radius: 8px;
  background-color: var(--bs-primary);
  color: white;
}

@media only screen and (max-width: 300px) {
  .filled-icon {
    display: none;
  }
}

@media only screen and (max-width: 300px) {
  .filled-icon {
    display: none;
  }
}

@include media-breakpoint-up(sm) {
  .btn {
    width: unset;
  }
}

@include media-breakpoint-down(sm) {
  .btn-sm-full-width {
    width: 100%;
  }
}

@media screen and (max-width: 1920px) {
  html {
    font-size: 1rem;
  }
}
@media screen and (max-width: 1440px) {
  html {
    font-size: 1rem;
  }
}
@media screen and (max-width: 479px) {
  html {
    font-size: calc(0.7494769874476988rem + 0.8368200836820083vw);
  }
}

@media screen and (-webkit-min-device-pixel-ratio:0) {
  select,
  textarea,
  input {
    font-size: 16px;
  }
}

// TODO create UI component for info text
.qr-code-info {
  text-align: center;
  font-size: 14px;
  background-color: var(--light-ui-element);
  border-radius: 10px;
  padding: 15px;
  color: var(--medium-ui-element);
}

.form-layout {
  display: flex;
  flex-direction: column;
  gap: var(--theme-spacing-rem);
}

.blur-canvas {
  canvas {
    filter: blur(10px);
  }
}

.full-width-modal {
  max-width: unset !important;
}

.heading-small {
  font-size: 1.3rem;
}

.form-control {
  padding: 0.5rem 1rem;
}

.ng-select-container {
  height: unset !important;
  padding: var(--theme-spacing-rem-half) var(--theme-spacing-rem);

  .ng-value-container {
    padding-left: unset !important;
  }

  .ng-input {
    padding-left: var(--theme-spacing-rem) !important;
  }
}

input {
  height: 40px;
}

input, textarea {
  border-radius: var(--border-radius-normal);
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  padding: 0.5rem 1rem;
  border: unset;
  border: var(--border-small) var(--theme-color-strokes);
  width: 100%;

  &:focus {
    border: var(--border-small) var(--theme-color-primary) !important;
    box-shadow: unset !important;
    outline: unset !important;
  }
}


.iti {
  display: block !important;
}

.dropdown-menu.country-dropdown {
  border-top-left-radius: 0px;
  border-top-right-radius: 0px;
  border-color: #c7cace;
  margin: 0!important;
  transform: translateY(-262px) !important;
}

.iti .iti__country-list {
  box-shadow: none;
  font-size: 14px;
  margin-left: 0;
  max-height: 170px;
}

.iti__flag-container.open + input {
  border-bottom-left-radius: 0px;
  border-bottom-right-radius: 0px;
}

.iti .search-container input {
  font-size: 14px;
  border-color: #c7cace;
  border-radius: 0;
  padding: 5px 10px;
}

.iti .search-container input:focus {
  outline: none;
}

@media screen and (max-width: 479px) {
  .iti .iti__country-list {
    width: 88.3vw;
  }
}

ngx-intl-tel-input {
  input {
    margin-bottom: 20px;
    padding: 10px;
    width: 100%;
  }
}

ngx-intl-tel-input.ng-invalid.ng-touched input {
  border: 1px solid var(--bs-danger);
}

ngx-intl-tel-input input:focus {
  outline: none !important;
  border-color: #3498db;
  box-shadow: 0 0 0 0 #000;
}

ngx-intl-tel-input input::-webkit-input-placeholder {
  color: #bac2c7;
}

ngx-intl-tel-input input:-ms-input-placeholder {
  color: #bac2c7;
}

ngx-intl-tel-input input::-ms-input-placeholder {
  color: #bac2c7;
}

ngx-intl-tel-input input::placeholder {
  color: #bac2c7;
}

ngx-intl-tel-input input[disabled] {
  background-color: #e5eaf1;
}

.form-group {
  position: relative;

  label {
    position: absolute;
    padding: 0.75rem 0.75rem;
    opacity: 0.5;
    top: 1px;
    z-index: 10;
  }

  input:focus + label, input:not(:placeholder-shown) + label, .floating-label {
    opacity:1;
    transform: translateY(-80%) translateX(-8px);
  }

  textarea:focus + label, textarea:not(:placeholder-shown) + label, .floating-label {
    opacity:1;
    transform: translateY(-80%) translateX(-8px);
  }
}

textarea, input, ng-select, .iti {
  margin-top: var(--theme-spacing-rem-half);
}

label {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  font-size: .9rem;
  line-height: 1;
}


ng-select {
  input {
    margin-top: unset !important;
    height: unset !important;

    &:focus {
      border: unset !important;
    }
  }
}

.custom-qr {
  canvas {
    border-radius: var(--border-radius-rem);
    width: 150px;
    height: 150px;
  }
}
